--Question 1
SELECT name,"incomeLevel.value"
FROM public."Countries"
WHERE "region.value" <> 'Aggregates' AND "incomeLevel.value"='Upper middle income'

--Question 2
SELECT "region.value",name,"incomeLevel.value"
FROM public."Countries"
WHERE "region.value" <> 'Aggregates' AND "incomeLevel.value"='Low income'
ORDER BY "region.value"

--Question 3

--Number of countries by region
CREATE TEMP TABLE Total_Countries AS
SELECT "region.value",COUNT(Distinct "name") AS "Total_Number_Countries"
FROM public."Countries" 
GROUP BY "region.value"

--Number and proportion of High-income countries by region
SELECT a."region.value",COUNT(Distinct "name") AS "HighIncome_Number_Countries","Total_Number_Countries",(cast(COUNT(Distinct "name") AS decimal)/ cast("Total_Number_Countries" AS decimal)) AS Proportion
FROM public."Countries" AS a
LEFT JOIN Total_Countries AS b
ON a."region.value"= b."region.value"
WHERE a."region.value" <> 'Aggregates' AND "incomeLevel.value"='High income'
GROUP BY a."region.value", "Total_Number_Countries"
ORDER BY (cast(COUNT(Distinct "name") AS decimal)/ cast("Total_Number_Countries" AS decimal)) DESC
fetch first 1 rows only

--Question 4

--Data format
--The below code generates the code that models the data into a format that can be used for the anlaysis
SELECT 'SELECT "Country Name", "Country Code", "Indicator Name", "Indicator Code" ,  
unnest(ARRAY[' || string_agg(quote_ident(attname) , ',') || ']) AS GDP,
unnest(ARRAY[' || string_agg(quote_literal(attname) , ',') || ']) AS Year from "GDPData"' AS sql
FROM   pg_attribute  
WHERE  attrelid = '"GDPData"'::regclass  AND attname not in ('Country Name', 'Country Code', 'Indicator Name', 'Indicator Code','Unnamed: 65')
AND    attnum > 0
AND    NOT attisdropped
GROUP  BY attrelid;

CREATE TABLE GDPData_Formatted
AS
SELECT "Country Name", "Country Code", "Indicator Name", "Indicator Code" , 
unnest(ARRAY["1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020"]) AS GDP ,
unnest(ARRAY['1960','1961','1962','1963','1964','1965','1966','1967','1968','1969','1970','1971','1972','1973','1974','1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995','1996','1997','1998','1999','2000','2001','2002','2003','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014','2015','2016','2017','2018','2019','2020']) as "Year"
from public."GDPData"

--Join Data Quaility 

SELECT count("Country Code")
FROM public.gdpdata_formatted
LEFT JOIN public."Countries"
ON "Country Code"=id
WHERE id IS NULL

--Cumulative Sum - GDP used as proxy for income

SELECT "Country Name", "region.value", "gdp"
		,SUM(CAST("gdp" AS NUMERIC)) OVER (PARTITION BY "region.value" ORDER BY "gdp", "Country Name" ASC)
FROM public.gdpdata_formatted
LEFT JOIN public."Countries"
ON "Country Code"=id
where "Year"='2020' AND "region.value" <> 'Aggregates'AND "gdp" IS NOT NULL
order by "region.value",gdp,"Country Name"


--Question 5
WITH Data as (select  ROW_NUMBER() OVER (PARTITION BY "Country Name" ORDER BY "Year") as RowId, "Country Name","Year",gdp from public.gdpdata_formatted
)
SELECT 
CurrentYear.RowId, CurrentYear."Country Name", CurrentYear."Year", CurrentYear.gdp, (CAST(CurrentYear.gdp AS FLOAT)-CAST(PreviousYear.gdp AS FLOAT))/CAST(PreviousYear.gdp AS FLOAT) AS GDP_Percentage_Difference
FROM Data as CurrentYear
LEFT JOIN Data as PreviousYear ON CurrentYear.RowId - 1 = PreviousYear.RowId  and CurrentYear."Country Name" = PreviousYear."Country Name"
--WHERE NextRow.RowId IS NOT NULL
ORDER BY "Country Name"

--Question 6
CREATE TEMP TABLE "Flag" AS
SELECT "region.value","Country Name", "gdp"
		,ROW_NUMBER() OVER(PARTITION BY"region.value" ORDER BY "gdp" ASC) AS Flag
FROM public.gdpdata_formatted
LEFT JOIN public."Countries"
ON "Country Code"=id
where "Year"='2017' AND "region.value" <> 'Aggregates' AND "gdp" IS NOT NULL 

SELECT * 
FROM "Flag"
WHERE Flag <=3



